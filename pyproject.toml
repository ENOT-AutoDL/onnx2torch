[project]
name = 'onnx2torch'
version = '1.5.14'
license = {file = 'LICENSE'}
description = 'ONNX to PyTorch converter'
readme = 'README.md'
keywords = ['AI', 'onnx', 'torch', 'onnx2torch', 'converters']
authors = [{name = 'ENOT LLC', email = 'enot@enot.ai'}]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3 :: Only',
]
requires-python = '>=3.6'
dependencies = [
    'numpy>=1.16.4',
    'onnx>=1.9.0',
    'torch>=1.8.0',
    'torchvision>=0.9.0',
]

[project.optional-dependencies]
dev = [
    'pytest',
    'black',
    'isort',
    'pylint',
    'pre-commit',
    'onnxruntime',
    'Pillow',
    'requests',
    'googledrivedownloader',
]

[project.urls]
homepage = 'https://enot.ai'
repository = 'https://github.com/ENOT-AutoDL/onnx2torch'

[tool.setuptools.packages.find]
include = ['onnx2torch*']

[tool.commitizen]
name = 'cz_conventional_commits'
tag_format = '$version'
version_scheme = 'pep440'
version_provider = 'pep621'
update_changelog_on_bump = true
major_version_zero = true

[tool.docformatter]
recursive = true
wrap-summaries = 0
wrap-descriptions = 0
blank = true
black = true
pre-summary-newline = true

[tool.yamlfix]
line_length = 120
explicit_start = false
sequence_style = 'keep_style'
whitelines = 1
section_whitelines = 1

[tool.black]
line-length = 120
target-version = ['py36', 'py37', 'py38', 'py39']
include = '\.pyi?$'
skip-string-normalization = true

[tool.isort]
profile = 'black'
line_length = 120
ensure_newline_before_comments = true
force_single_line = true

[tool.pylint.master]
load-plugins = ['pylint.extensions.docparams']

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-args = 12
max-locals = 30
max-attributes = 20
min-public-methods = 0

[tool.pylint.typecheck]
generated-members = ['torch.*']

[tool.pylint.messages_control]
disable = [
    'logging-fstring-interpolation',
    'cyclic-import',
    'duplicate-code',
    'missing-module-docstring',
    'unnecessary-pass',
    'no-name-in-module',
]

[tool.pylint.BASIC]
good-names = ['bs', 'bn']

[tool.pyright]
reportMissingImports = false
reportMissingTypeStubs = false
reportWildcardImportFromLibrary = false
